{"is_source_file": false, "format": "", "description": "", "external_files": ["../node_modules/react/index.js", "../node_modules/react/cjs/react-jsx-runtime.production.min.js", "../node_modules/react/cjs/react.production.min.js", "../node_modules/@supabase/postgrest-js/src/PostgrestClient.ts", "../node_modules/scheduler/cjs/scheduler.production.min.js", "../node_modules/@supabase/postgrest-js/src/PostgrestBuilder.ts", "../node_modules/@supabase/postgrest-js/src/PostgrestTransformBuilder.ts", "../node_modules/react-dom/client.js", "../node_modules/@supabase/postgrest-js/src/version.ts", "../node_modules/react/jsx-runtime.js", "../node_modules/@supabase/postgrest-js/src/PostgrestError.ts", "../node_modules/@supabase/node-fetch/browser.js", "../node_modules/react-dom/cjs/react-dom.production.min.js", "../node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts", "../node_modules/@supabase/postgrest-js/src/constants.ts", "../node_modules/@supabase/postgrest-js/src/PostgrestQueryBuilder.ts", "../node_modules/scheduler/index.js", "../node_modules/react-dom/index.js", "../node_modules/@supabase/postgrest-js/src/index.ts", "../webpack/bootstrap", "../webpack/runtime/create fake namespace object", "../webpack/runtime/define property getters", "../webpack/runtime/ensure chunk", "../webpack/runtime/get javascript chunk filename", "../webpack/runtime/get mini-css chunk filename", "../webpack/runtime/global", "../webpack/runtime/hasOwnProperty shorthand", "../webpack/runtime/load script", "../webpack/runtime/make namespace object", "../webpack/runtime/publicPath", "../webpack/runtime/jsonp chunk loading", "../node_modules/@supabase/functions-js/src/types.ts", "../node_modules/@supabase/functions-js/src/FunctionsClient.ts", "../node_modules/@supabase/functions-js/src/helper.ts", "../node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs", "../node_modules/@supabase/realtime-js/src/lib/constants.ts", "../node_modules/@supabase/realtime-js/src/lib/transformers.ts", "../node_modules/@supabase/realtime-js/src/lib/serializer.ts", "../node_modules/@supabase/realtime-js/src/lib/timer.ts", "../node_modules/@supabase/realtime-js/src/lib/push.ts", "../node_modules/@supabase/realtime-js/src/RealtimePresence.ts", "../node_modules/@supabase/realtime-js/src/RealtimeChannel.ts", "../node_modules/@supabase/realtime-js/src/RealtimeClient.ts", "../node_modules/@supabase/storage-js/src/lib/errors.ts", "../node_modules/@supabase/storage-js/src/lib/helpers.ts", "../node_modules/@supabase/storage-js/src/lib/fetch.ts", "../node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts", "../node_modules/@supabase/storage-js/src/lib/version.ts", "../node_modules/@supabase/storage-js/src/lib/constants.ts", "../node_modules/@supabase/storage-js/src/packages/StorageBucketApi.ts", "../node_modules/@supabase/storage-js/src/StorageClient.ts", "../node_modules/@supabase/supabase-js/src/lib/constants.ts", "../node_modules/@supabase/supabase-js/src/lib/fetch.ts", "../node_modules/@supabase/auth-js/src/lib/version.ts", "../node_modules/@supabase/auth-js/src/lib/constants.ts", "../node_modules/@supabase/auth-js/src/lib/errors.ts", "../node_modules/@supabase/auth-js/src/lib/base64url.ts", "../node_modules/@supabase/auth-js/src/lib/helpers.ts", "../node_modules/@supabase/auth-js/src/lib/fetch.ts", "../node_modules/@supabase/auth-js/src/GoTrueAdminApi.ts", "../node_modules/@supabase/auth-js/src/lib/local-storage.ts", "../node_modules/@supabase/auth-js/src/lib/locks.ts", "../node_modules/@supabase/auth-js/src/lib/polyfills.ts", "../node_modules/@supabase/auth-js/src/GoTrueClient.ts", "../node_modules/@supabase/auth-js/src/AuthAdminApi.ts", "../node_modules/@supabase/auth-js/src/AuthClient.ts", "../node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts", "../node_modules/@supabase/supabase-js/src/SupabaseClient.ts", "../node_modules/@supabase/supabase-js/src/lib/helpers.ts", "../node_modules/@supabase/supabase-js/src/index.ts", "config/supabaseClient.js", "contexts/AuthContext.js", "../node_modules/@remix-run/router/history.ts", "../node_modules/@remix-run/router/utils.ts", "../node_modules/@remix-run/router/router.ts", "../node_modules/react-router/lib/context.ts", "../node_modules/react-router/lib/hooks.tsx", "../node_modules/react-router/lib/deprecations.ts", "../node_modules/react-router/lib/components.tsx", "../node_modules/react-router-dom/dom.ts", "../node_modules/react-router-dom/index.tsx", "../node_modules/clsx/dist/clsx.m.js", "components/Navbar.js", "components/Layout.js", "pages/Home.js", "../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts", "../node_modules/react-hook-form/src/utils/isDateObject.ts", "../node_modules/react-hook-form/src/utils/isNullOrUndefined.ts", "../node_modules/react-hook-form/src/utils/isObject.ts", "../node_modules/react-hook-form/src/logic/getEventValue.ts", "../node_modules/react-hook-form/src/logic/isNameInFieldArray.ts", "../node_modules/react-hook-form/src/logic/getNodeParentName.ts", "../node_modules/react-hook-form/src/utils/isWeb.ts", "../node_modules/react-hook-form/src/utils/cloneObject.ts", "../node_modules/react-hook-form/src/utils/isPlainObject.ts", "../node_modules/react-hook-form/src/utils/compact.ts", "../node_modules/react-hook-form/src/utils/isUndefined.ts", "../node_modules/react-hook-form/src/utils/get.ts", "../node_modules/react-hook-form/src/utils/isBoolean.ts", "../node_modules/react-hook-form/src/utils/isKey.ts", "../node_modules/react-hook-form/src/utils/stringToPath.ts", "../node_modules/react-hook-form/src/utils/set.ts", "../node_modules/react-hook-form/src/constants.ts", "../node_modules/react-hook-form/src/useFormContext.tsx", "../node_modules/react-hook-form/src/logic/getProxyFormState.ts", "../node_modules/react-hook-form/src/useIsomorphicLayoutEffect.ts", "../node_modules/react-hook-form/src/utils/isString.ts", "../node_modules/react-hook-form/src/logic/generateWatchOutput.ts", "../node_modules/react-hook-form/src/logic/appendErrors.ts", "../node_modules/react-hook-form/src/utils/convertToArrayPayload.ts", "../node_modules/react-hook-form/src/utils/createSubject.ts", "../node_modules/react-hook-form/src/utils/isPrimitive.ts", "../node_modules/react-hook-form/src/utils/deepEqual.ts", "../node_modules/react-hook-form/src/utils/isEmptyObject.ts", "../node_modules/react-hook-form/src/utils/isFileInput.ts", "../node_modules/react-hook-form/src/utils/isFunction.ts", "../node_modules/react-hook-form/src/utils/isHTMLElement.ts", "../node_modules/react-hook-form/src/utils/isMultipleSelect.ts", "../node_modules/react-hook-form/src/utils/isRadioInput.ts", "../node_modules/react-hook-form/src/utils/live.ts", "../node_modules/react-hook-form/src/utils/unset.ts", "../node_modules/react-hook-form/src/utils/objectHasFunction.ts", "../node_modules/react-hook-form/src/logic/getDirtyFields.ts", "../node_modules/react-hook-form/src/logic/getCheckboxValue.ts", "../node_modules/react-hook-form/src/logic/getFieldValueAs.ts", "../node_modules/react-hook-form/src/logic/getRadioValue.ts", "../node_modules/react-hook-form/src/logic/getFieldValue.ts", "../node_modules/react-hook-form/src/logic/getResolverOptions.ts", "../node_modules/react-hook-form/src/utils/isRegex.ts", "../node_modules/react-hook-form/src/logic/getRuleValue.ts", "../node_modules/react-hook-form/src/logic/getValidationModes.ts", "../node_modules/react-hook-form/src/logic/hasPromiseValidation.ts", "../node_modules/react-hook-form/src/logic/isWatched.ts", "../node_modules/react-hook-form/src/logic/iterateFieldsByAction.ts", "../node_modules/react-hook-form/src/logic/schemaErrorLookup.ts", "../node_modules/react-hook-form/src/logic/shouldRenderFormState.ts", "../node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts", "../node_modules/react-hook-form/src/utils/isMessage.ts", "../node_modules/react-hook-form/src/logic/getValidateError.ts", "../node_modules/react-hook-form/src/logic/getValueAndMessage.ts", "../node_modules/react-hook-form/src/logic/validateField.ts", "../node_modules/react-hook-form/src/logic/createFormControl.ts", "../node_modules/react-hook-form/src/logic/hasValidation.ts", "../node_modules/react-hook-form/src/logic/skipValidation.ts", "../node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts", "../node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts", "../node_modules/react-hook-form/src/logic/unsetEmptyArray.ts", "../node_modules/react-hook-form/src/useForm.ts", "... (many react-hook-form utils and internal modules)", "./helper", "./types", "../cjs/index.js", "./version", "./lib/constants", "./lib/serializer", "./lib/timer", "./lib/transformers", "./RealtimeChannel", "ws", "react-router-dom", "../contexts/AuthContext", "../config/supabaseClient", "react-toastify"], "external_methods": ["React.createContext", "React.useCallback", "React.useContext", "React.useDebugValue", "React.useDeferredValue", "React.useEffect", "React.useId", "React.useImperativeHandle", "React.useInsertionEffect", "React.useLayoutEffect", "React.useMemo", "React.useReducer", "React.useRef", "React.useState", "React.useSyncExternalStore", "React.useTransition", "setTimeout", "clearTimeout", "requestIdleCallback", "Promise.prototype.then", "Promise.prototype.catch", "resolveFetch", "import('@supabase/node-fetch')", "import('ws')", "import('@remix-run/router')"], "published": [], "classes": [{"name": "PostgrestClient", "description": "A client class for interacting with a PostgREST API, allowing for querying schemas, tables, views, functions, and RPC calls with customizable headers and schema context."}, {"name": "PostgrestTransformBuilder", "description": "A builder class that extends PostgrestBuilder to perform select operations with filtering, ordering, and transformation options."}, {"name": "FunctionsClient", "description": "Client class for invoking serverless functions via fetch with support for headers, method, region, and error handling."}, {"name": "Serializer", "description": "Handles encoding and decoding WebSocket protocol messages, including binary decoding."}, {"name": "Timer", "description": "Implements retry timers with exponential or custom backoff for reconnect logic."}, {"name": "Push", "description": "Handles push messaging within a WebSocket channel, with timeout and response hooks."}, {"name": "RealtimePresence", "description": "Manages real-time presence state, diff synchronization, and handling joins/leaves within a channel."}, {"name": "RealtimeChannel", "description": "Represents a communication channel over WebSocket, with subscription, message handling, and presence support."}, {"name": "RealtimeClient", "description": "Main WebSocket runtime for establishing connection, managing channels, sending/receiving messages, reconnection, and WebSocket transport abstraction."}, {"name": "StorageError", "description": "Custom error class for storage-related errors, extending Error."}, {"name": "StorageApiError", "description": "Extends StorageError, adding an HTTP status code property."}, {"name": "StorageUnknownError", "description": "Wraps unknown errors occurring within storage operations, preserving original error info."}, {"name": "Deferred", "description": "Represents an unresolved asynchronous task with resolve and reject capabilities."}], "methods": [{"name": "from", "description": "Performs a query on a table or view specified by name."}, {"name": "schema", "description": "Switches the schema context for subsequent queries."}, {"name": "rpc", "description": "Calls a stored procedure or function with given arguments and options."}, {"name": "select", "description": "Performs a SELECT query with specified columns and returns a transformed builder for chaining further operations."}, {"name": "resolveFetch", "description": "Resolves and provides a fetch function, default or custom, including dynamic import for node environment."}, {"name": "import('@supabase/node-fetch')", "description": "Dynamically imports node-fetch to provide fetch in NodeJS environments."}, {"name": "import('ws')", "description": "Dynamically imports the 'ws' WebSocket library for NodeJS environments."}, {"name": "setAuth", "description": "Sets or overrides the authentication token in the client, with validation of JWT claims."}, {"name": "sendHeartbeat", "description": "Sends a keep-alive heartbeat message over the WebSocket connection if connected."}, {"name": "flushSendBuffer", "description": "Flushes the buffer of pending send callbacks when the WebSocket is connected."}, {"name": "_resolveFetch", "description": "Resolves and provides a fetch function, dynamically importing if needed; handles custom fetches."}, {"name": "resolveResponse", "description": "Dynamically imports or returns the Response class for Node or browser environments."}, {"name": "recursiveToCamel", "description": "Recursively converts object keys from snake_case or hyphenated to camelCase."}], "calls": ["React.createContext", "React.useCallback", "React.useContext", "React.useDebugValue", "React.useDeferredValue", "React.useEffect", "React.useId", "React.useImperativeHandle", "React.useInsertionEffect", "React.useLayoutEffect", "React.useMemo", "React.useReducer", "React.useRef", "React.useState", "React.useSyncExternalStore", "React.useTransition", "setTimeout", "clearTimeout", "requestIdleCallback", "Promise.prototype.then", "Promise.prototype.catch", "resolveFetch", "import('@supabase/node-fetch')", "import('ws')"], "search-terms": ["main.06a55214.js.map", "source map", "JavaScript bundle", "build static", "debugging", "minified code", "source mapping", "original source files", "webpack", "bundled JavaScript", "React reconciliation internal functions", "Fiber tree management", "React DevTools integration", "minified transpiled React code", "WebSocket runtime", "RealtimePresence", "RealtimeChannel", "RealtimeClient", "serializer", "timer", "transformers", "appvote_portal build", "WebSocket connection management", "JWT token validation", "WebSocket heartbeat", "Base64 URL encoding", "URL parameter parsing", "storage helpers", "async defer", "React routing components", "client-side navigation", "scroll restoration", "form handling hooks", "app voting system", "user profile fetching", "image URL handling", "vote toggling", "debugging information", "minified JavaScript", "source code mapping", "build artifact", "map file"], "state": 2, "file_id": 61, "knowledge_revision": 173, "git_revision": "", "filename": "/home/kavia/workspace/code-generation/appvote-portal-89970-89978/appvote_portal/build/static/js/main.06a55214.js.map", "hash": "5e5685fc58340e180e039d7603b7f0e1", "format-version": 4, "code-base-name": "default", "revision_history": [{"173": ""}]}